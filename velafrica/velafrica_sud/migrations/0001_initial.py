# -*- coding: utf-8 -*-
# Generated by Django 1.11.5 on 2018-10-19 12:45
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_resized.forms
import multiselectfield.db.fields
import velafrica.core.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organisation', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('stock', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Container',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('velos_loaded', models.IntegerField(default=0, verbose_name=b'Anzahl Velos eingeladen')),
                ('velos_unloaded', models.IntegerField(default=0, verbose_name=b'Anzahl Velos ausgeladen')),
                ('spare_parts', models.BooleanField(default=False, verbose_name=b'Ersatzteile transportiert?')),
                ('velos_worth', models.IntegerField(default=0, verbose_name=b'Wert Velos')),
                ('spare_parts_worth', models.IntegerField(default=0, verbose_name=b'Wert Ersatzteile')),
                ('tools_worth', models.IntegerField(default=0, verbose_name=b'Wert Werkzeuge')),
                ('various_worth', models.IntegerField(default=0, verbose_name=b'Wert Anderes')),
                ('pickup_date', models.DateField(verbose_name=b'Ladedatum')),
                ('shipment_date', models.DateField(blank=True, null=True, verbose_name=b'Verschiffungsdatum ab Europa')),
                ('arrival_port_date', models.DateField(blank=True, null=True, verbose_name=b'Ankunft Hafen Partner')),
                ('arrival_partner_date', models.DateField(blank=True, null=True, verbose_name=b'Ankunft Partner')),
                ('time_to_customer', models.IntegerField(blank=True, help_text=b'Anzahl Tage vom Verlad bis zur Ankunft beim Partner.', null=True, verbose_name=b'Versandzeit (Tage)')),
                ('container_no', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Containernummer')),
                ('seal_no', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Plombennummer')),
                ('sgs_certified', models.BooleanField(default=False, verbose_name=b'SGS zertifiziert?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen zum Container')),
                ('booked', models.BooleanField(default=False, verbose_name=b'Abgeschlossen')),
            ],
            options={
                'ordering': ['-pickup_date'],
            },
        ),
        migrations.CreateModel(
            name='Forwarder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name=b'Name des Forwarders')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='HistoricalContainer',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('velos_loaded', models.IntegerField(default=0, verbose_name=b'Anzahl Velos eingeladen')),
                ('velos_unloaded', models.IntegerField(default=0, verbose_name=b'Anzahl Velos ausgeladen')),
                ('spare_parts', models.BooleanField(default=False, verbose_name=b'Ersatzteile transportiert?')),
                ('velos_worth', models.IntegerField(default=0, verbose_name=b'Wert Velos')),
                ('spare_parts_worth', models.IntegerField(default=0, verbose_name=b'Wert Ersatzteile')),
                ('tools_worth', models.IntegerField(default=0, verbose_name=b'Wert Werkzeuge')),
                ('various_worth', models.IntegerField(default=0, verbose_name=b'Wert Anderes')),
                ('pickup_date', models.DateField(verbose_name=b'Ladedatum')),
                ('shipment_date', models.DateField(blank=True, null=True, verbose_name=b'Verschiffungsdatum ab Europa')),
                ('arrival_port_date', models.DateField(blank=True, null=True, verbose_name=b'Ankunft Hafen Partner')),
                ('arrival_partner_date', models.DateField(blank=True, null=True, verbose_name=b'Ankunft Partner')),
                ('time_to_customer', models.IntegerField(blank=True, help_text=b'Anzahl Tage vom Verlad bis zur Ankunft beim Partner.', null=True, verbose_name=b'Versandzeit (Tage)')),
                ('container_no', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Containernummer')),
                ('seal_no', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Plombennummer')),
                ('sgs_certified', models.BooleanField(default=False, verbose_name=b'SGS zertifiziert?')),
                ('notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen zum Container')),
                ('booked', models.BooleanField(default=False, verbose_name=b'Abgeschlossen')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Erstellt am'), ('~', 'Ge\xe4ndert'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('logistics', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='velafrica_sud.Forwarder')),
                ('organisation_from', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organisation.Organisation')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical container',
            },
        ),
        migrations.CreateModel(
            name='HistoricalForwarder',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, null=True, verbose_name=b'Name des Forwarders')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Erstellt am'), ('~', 'Ge\xe4ndert'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical forwarder',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPartnerStaff',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name=b'Name des Angestellten')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Erstellt am'), ('~', 'Ge\xe4ndert'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical partner staff',
            },
        ),
        migrations.CreateModel(
            name='HistoricalPartnerSud',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('image', models.TextField(blank=True, help_text=b'Foto vom Partner vor Ort.', max_length=100, null=True)),
                ('org_type', models.CharField(blank=True, max_length=255, null=True)),
                ('legalform', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Organisationsform')),
                ('partner_since', models.IntegerField(blank=True, help_text=b'Jahr', null=True, verbose_name=b'Partner seit...')),
                ('vocational_training', models.BooleanField(default=False, verbose_name=b'Bietet Berufsbildung an')),
                ('infrastructure', models.TextField(blank=True, help_text=b'\xc3\x9cbersicht \xc3\xbcber die Infrastruktur vor Ort (Anzahl Arbeitspl\xc3\xa4tze, Lagerm\xc3\xb6glichkeiten, Art der Geb\xc3\xa4ude etc)', null=True, verbose_name=b'Infrastruktur')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Erstellt am'), ('~', 'Ge\xe4ndert'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('organisation', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='organisation.Organisation')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical partner sud',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReport',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('creation', models.DateField(default=django.utils.timezone.now)),
                ('currency', models.CharField(default=b'', max_length=10, null=True, verbose_name=b'Verwendete W\xc3\xa4hrung bei Finanzangaben')),
                ('currency_rate', models.DecimalField(decimal_places=2, default=1.0, max_digits=10, verbose_name=b'W\xc3\xa4hrungskurs zu USD')),
                ('employment_fulltime_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Vollzeit M\xc3\xa4nner')),
                ('employment_fulltime_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Vollzeit Frauen')),
                ('employment_parttime_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Teilzeit M\xc3\xa4nner')),
                ('employment_parttime_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Teilzeit Frauen')),
                ('employment_volunteer_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Freiwillige M\xc3\xa4nner')),
                ('employment_volunteer_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Freiwillige Frauen')),
                ('employment_internship_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Internship M\xc3\xa4nner')),
                ('employment_internship_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Internship Frauen')),
                ('employment_trainee_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Trainee M\xc3\xa4nner')),
                ('employment_trainee_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Trainee Frauen')),
                ('employment_notes', models.TextField(blank=True, null=True, verbose_name=b'Jobs Beschreibung')),
                ('employment_salary_calculation', models.TextField(blank=True, help_text=b'Wie werden die Sal\xc3\xa4re / Kompensationen berechnet?', null=True, verbose_name=b'Berechnung der Sal\xc3\xa4re')),
                ('marketing_customer_segments', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(b'men', b'Men'), (b'women', b'Women'), (b'children_students', b'Children/Students'), (b'teachers', b'Teachers'), (b'businessmen', b'Business Men'), (b'retail', b'Bicycle Retail Agents'), (b'wholesale', b'Bicycle Wholesale Agents'), (b'farmers', b'Farmers'), (b'safari', b'Safari companies'), (b'hospitals', b'Hospitals'), (b'other', b'other')], max_length=255, null=True, verbose_name=b'Kundensegmente')),
                ('marketing_customer_segments_other', models.CharField(blank=True, help_text=b"Bitte ausf\xc3\xbcllen, wenn bei der vorherigen Frage 'others' ausgew\xc3\xa4hlt wurde.", max_length=255, null=True, verbose_name=b'Andere')),
                ('marketing_customer_segments_top1', models.CharField(blank=True, choices=[(b'men', b'Men'), (b'women', b'Women'), (b'children_students', b'Children/Students'), (b'teachers', b'Teachers'), (b'businessmen', b'Business Men'), (b'retail', b'Bicycle Retail Agents'), (b'wholesale', b'Bicycle Wholesale Agents'), (b'farmers', b'Farmers'), (b'safari', b'Safari companies'), (b'hospitals', b'Hospitals'), (b'other', b'other')], max_length=255, null=True, verbose_name=b'Kundensegmente Top 1')),
                ('marketing_customer_segments_top2', models.CharField(blank=True, choices=[(b'men', b'Men'), (b'women', b'Women'), (b'children_students', b'Children/Students'), (b'teachers', b'Teachers'), (b'businessmen', b'Business Men'), (b'retail', b'Bicycle Retail Agents'), (b'wholesale', b'Bicycle Wholesale Agents'), (b'farmers', b'Farmers'), (b'safari', b'Safari companies'), (b'hospitals', b'Hospitals'), (b'other', b'other')], max_length=255, null=True, verbose_name=b'Kundensegmente Top 2')),
                ('marketing_customer_segments_top3', models.CharField(blank=True, choices=[(b'men', b'Men'), (b'women', b'Women'), (b'children_students', b'Children/Students'), (b'teachers', b'Teachers'), (b'businessmen', b'Business Men'), (b'retail', b'Bicycle Retail Agents'), (b'wholesale', b'Bicycle Wholesale Agents'), (b'farmers', b'Farmers'), (b'safari', b'Safari companies'), (b'hospitals', b'Hospitals'), (b'other', b'other')], max_length=255, null=True, verbose_name=b'Kundensegmente Top 3')),
                ('marketing_channels_mouth', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_radio', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_tv', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_socialmedia', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_poster', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_flyer', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_event_organisation', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_event_attendance', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_other', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_sales_shop', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Shop')),
                ('marketing_sales_outlets', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Outlet')),
                ('marketing_sales_retail', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Retail')),
                ('marketing_sales_wholesale', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Wholesale')),
                ('marketing_sales_other', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Andere')),
                ('economic_bicycles_amount', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl verkaufte Fahrr\xc3\xa4der')),
                ('economic_bicycles_turnover', models.IntegerField(blank=True, null=True, verbose_name=b'Umsatz Fahrr\xc3\xa4der')),
                ('economic_spareparts_amount', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl verkaufte Ersatzteile')),
                ('economic_spareparts_turnover', models.IntegerField(blank=True, null=True, verbose_name=b'Umsatz Ersatzteile')),
                ('economic_services_amount', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl verkaufte Dienstleistungen')),
                ('economic_services_turnover', models.IntegerField(blank=True, null=True, verbose_name=b'Umsatz Dienstleistungen')),
                ('economic_turnover_total', models.IntegerField(blank=True, null=True, verbose_name=b'Total Umsatz')),
                ('economic_import_taxes', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Aktuelle Importz\xc3\xb6lle f\xc3\xbcr gebrauchte Fahrr\xc3\xa4der')),
                ('economic_transport_costs_port_to_organisation', models.IntegerField(blank=True, null=True, verbose_name=b'Aktuelle Kosten f\xc3\xbcr Transport von Eingangshafen zur Organisation')),
                ('economic_category1_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 1')),
                ('economic_category1_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 1')),
                ('economic_category2_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 2')),
                ('economic_category2_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 2')),
                ('economic_category3_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 3')),
                ('economic_category3_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 3')),
                ('economic_category4_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 4')),
                ('economic_category4_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 4')),
                ('economic_category5_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 5')),
                ('economic_category5_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 5')),
                ('economic_category6_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 6')),
                ('economic_category6_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 6')),
                ('economic_category7_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 7')),
                ('economic_category7_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 7')),
                ('economic_category8_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 8')),
                ('economic_category8_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 8')),
                ('economic_payment_types', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(b'cash', b'Cash Payment'), (b'installment', b'Installment'), (b'card', b'Payment with Credit/Debit Card'), (b'phone', b'Payment with Mobile Phone'), (b'microloan', b'Micro Loan (e.g. in cooperation with Micro Finance Institution)'), (b'other', b'Other')], max_length=20, null=True)),
                ('economic_notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen')),
                ('vocational_program_duration', models.CharField(blank=True, choices=[(b'less_than_3_months', b'less than 3 months'), (b'6_to_12_months', b'6 - 12 months'), (b'12_to_18_months', b'12 - 18 months'), (b'18_to_24_months', b'18 - 24 months'), (b'more_than_24_months', b'more than 24 months')], max_length=1, null=True, verbose_name=b'Dauer des Besch\xc3\xa4ftigungsprogramms')),
                ('vocational_program_girls', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl M\xc3\xa4dchen im Ausbildungsprogramm')),
                ('vocational_program_boys', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Jungen im Ausbildungsprogramm')),
                ('vocational_completed_girls', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl M\xc3\xa4dchen Ausbildungsprogramm abgeschlossen')),
                ('vocational_completed_boys', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Jungen Ausbildungsprogramm abgeschlossen')),
                ('vocational_certificates', models.IntegerField(blank=True, null=True, verbose_name=b'Ausgestellte Zertifikate dieses Jahr')),
                ('vocational_certificates_ack', models.IntegerField(blank=True, null=True, verbose_name=b'Davon staatlich anerkannte Zertifikate')),
                ('vocational_exstudents_employed', models.IntegerField(blank=True, null=True, verbose_name=b'Studenten vom letzten Jahr die jetzt angestellt sind')),
                ('vocational_exstudents_selfemployed_new', models.IntegerField(blank=True, null=True, verbose_name=b'Studenten vom letzten Jahr die jetzt bei einem anderen Betrieb angestellt sind')),
                ('vocational_exstudents_selfemployed_link', models.IntegerField(blank=True, null=True, verbose_name=b'Studenten vom letzten Jahr die jetzt bei einem Partnerbetrieb angestellt sind')),
                ('vocational_notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen')),
                ('vocational_exstudents_bicycle_industry', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Ex-Studenten die jetzt im Velogewerbe arbeiten')),
                ('vocational_exstudents_agriculture', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Ex-Studenten die jetzt in der Landwirtschaft arbeiten')),
                ('vocational_exstudents_familiybusiness', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Ex-Studenten die jetzt im Familienbetrieb arbeiten')),
                ('vocational_exstudents_energy', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Ex-Studenten die jetzt im Energie Sektor arbeiten')),
                ('mobilityprogram', models.BooleanField(default=False)),
                ('mobilityprogram_people_benefitted', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Anzahl Personen die vom Mobilit\xc3\xa4tsprogramm profitiert haben')),
                ('mobilityprogram_financial_support', models.BooleanField(default=False, verbose_name=b'Mobilit\xc3\xa4tsprogramm finanziell von Velafrica unterst\xc3\xbctzt?')),
                ('mobilityprogram_notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen')),
                ('communityproject_reinvest_profit', models.BooleanField(default=False, verbose_name=b'Gewinn vom letzten Jahr in Community Projekte investiert?')),
                ('communityproject_areas', models.CharField(blank=True, choices=[(b'education', b'Schooling / Education'), (b'entrepreneurship', b'Entrepreneuership'), (b'environment', b'Evnironment / Environmental protection'), (b'mobility', b'Mobility'), (b'women_empowerment', b"Women's empowerment"), (b'children_empowerment', b"Children's empowerment"), (b'sports_activist', b'Sports activities'), (b'other', b'Other')], max_length=1, null=True, verbose_name=b'Feld der Community Arbeit')),
                ('communityproject_reinvest_profit_total', models.IntegerField(blank=True, null=True, verbose_name=b'In Community Projekt re-investierter Betrag')),
                ('communityproject_people_benefitted', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Anzahl Personen die vom Community Projekt profitiert haben')),
                ('communityproject_manager', models.BooleanField(default=False, verbose_name=b'Community Manager vorhanden?')),
                ('communityproject_notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen')),
                ('cooperation_quality_bicycles', models.CharField(blank=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10')], max_length=2, null=True, verbose_name=b'Qualit\xc3\xa4t der gelieferten Velos')),
                ('cooperation_quality_spares', models.CharField(blank=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10')], max_length=2, null=True, verbose_name=b'Qualit\xc3\xa4t der gelieferten Ersatzteile')),
                ('cooperation_quality_tools', models.CharField(blank=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10')], max_length=2, null=True, verbose_name=b'Qualit\xc3\xa4t der gelieferten Werkzeuge')),
                ('cooperation_ordering_experience', models.TextField(blank=True, help_text=b'Wie wird das Bestellen der Fahrr\xc3\xa4der und Ersatzteile empfunden?', null=True, verbose_name=b'Bestellerlebnis')),
                ('cooperation_comments', models.TextField(blank=True, null=True, verbose_name=b'Allgemeine Kommentare zur Partnerschaft')),
                ('final_biggest_success', models.TextField(blank=True, null=True, verbose_name=b'Gr\xc3\xb6sste Erfolge dieses Jahres?')),
                ('final_future_challenges', models.TextField(blank=True, null=True, verbose_name=b'Gr\xc3\xb6sste Herausforderungen der Zukunft?')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Erstellt am'), ('~', 'Ge\xe4ndert'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical report',
            },
        ),
        migrations.CreateModel(
            name='HistoricalReportStaff',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('salary', models.IntegerField(verbose_name=b'Sal\xc3\xa4r (USD)')),
                ('number', models.IntegerField(verbose_name=b'Anzahl Angestellte')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Erstellt am'), ('~', 'Ge\xe4ndert'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical report staff',
            },
        ),
        migrations.CreateModel(
            name='PartnerStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name=b'Name des Angestellten')),
            ],
        ),
        migrations.CreateModel(
            name='PartnerSud',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', django_resized.forms.ResizedImageField(blank=True, help_text=b'Foto vom Partner vor Ort.', null=True, storage=velafrica.core.storage.MyStorage(), upload_to=b'velafrica_sud/partner/')),
                ('org_type', models.CharField(blank=True, max_length=255, null=True)),
                ('legalform', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Organisationsform')),
                ('partner_since', models.IntegerField(blank=True, help_text=b'Jahr', null=True, verbose_name=b'Partner seit...')),
                ('vocational_training', models.BooleanField(default=False, verbose_name=b'Bietet Berufsbildung an')),
                ('infrastructure', models.TextField(blank=True, help_text=b'\xc3\x9cbersicht \xc3\xbcber die Infrastruktur vor Ort (Anzahl Arbeitspl\xc3\xa4tze, Lagerm\xc3\xb6glichkeiten, Art der Geb\xc3\xa4ude etc)', null=True, verbose_name=b'Infrastruktur')),
                ('organisation', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='partnersud', to='organisation.Organisation')),
            ],
            options={
                'ordering': ['organisation__name'],
                'verbose_name_plural': 'Partner S\xfcd',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('creation', models.DateField(default=django.utils.timezone.now)),
                ('currency', models.CharField(default=b'', max_length=10, null=True, verbose_name=b'Verwendete W\xc3\xa4hrung bei Finanzangaben')),
                ('currency_rate', models.DecimalField(decimal_places=2, default=1.0, max_digits=10, verbose_name=b'W\xc3\xa4hrungskurs zu USD')),
                ('employment_fulltime_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Vollzeit M\xc3\xa4nner')),
                ('employment_fulltime_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Vollzeit Frauen')),
                ('employment_parttime_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Teilzeit M\xc3\xa4nner')),
                ('employment_parttime_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Teilzeit Frauen')),
                ('employment_volunteer_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Freiwillige M\xc3\xa4nner')),
                ('employment_volunteer_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Freiwillige Frauen')),
                ('employment_internship_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Internship M\xc3\xa4nner')),
                ('employment_internship_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Internship Frauen')),
                ('employment_trainee_men', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Trainee M\xc3\xa4nner')),
                ('employment_trainee_women', models.IntegerField(blank=True, null=True, verbose_name=b'Angestellte Trainee Frauen')),
                ('employment_notes', models.TextField(blank=True, null=True, verbose_name=b'Jobs Beschreibung')),
                ('employment_salary_calculation', models.TextField(blank=True, help_text=b'Wie werden die Sal\xc3\xa4re / Kompensationen berechnet?', null=True, verbose_name=b'Berechnung der Sal\xc3\xa4re')),
                ('marketing_customer_segments', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(b'men', b'Men'), (b'women', b'Women'), (b'children_students', b'Children/Students'), (b'teachers', b'Teachers'), (b'businessmen', b'Business Men'), (b'retail', b'Bicycle Retail Agents'), (b'wholesale', b'Bicycle Wholesale Agents'), (b'farmers', b'Farmers'), (b'safari', b'Safari companies'), (b'hospitals', b'Hospitals'), (b'other', b'other')], max_length=255, null=True, verbose_name=b'Kundensegmente')),
                ('marketing_customer_segments_other', models.CharField(blank=True, help_text=b"Bitte ausf\xc3\xbcllen, wenn bei der vorherigen Frage 'others' ausgew\xc3\xa4hlt wurde.", max_length=255, null=True, verbose_name=b'Andere')),
                ('marketing_customer_segments_top1', models.CharField(blank=True, choices=[(b'men', b'Men'), (b'women', b'Women'), (b'children_students', b'Children/Students'), (b'teachers', b'Teachers'), (b'businessmen', b'Business Men'), (b'retail', b'Bicycle Retail Agents'), (b'wholesale', b'Bicycle Wholesale Agents'), (b'farmers', b'Farmers'), (b'safari', b'Safari companies'), (b'hospitals', b'Hospitals'), (b'other', b'other')], max_length=255, null=True, verbose_name=b'Kundensegmente Top 1')),
                ('marketing_customer_segments_top2', models.CharField(blank=True, choices=[(b'men', b'Men'), (b'women', b'Women'), (b'children_students', b'Children/Students'), (b'teachers', b'Teachers'), (b'businessmen', b'Business Men'), (b'retail', b'Bicycle Retail Agents'), (b'wholesale', b'Bicycle Wholesale Agents'), (b'farmers', b'Farmers'), (b'safari', b'Safari companies'), (b'hospitals', b'Hospitals'), (b'other', b'other')], max_length=255, null=True, verbose_name=b'Kundensegmente Top 2')),
                ('marketing_customer_segments_top3', models.CharField(blank=True, choices=[(b'men', b'Men'), (b'women', b'Women'), (b'children_students', b'Children/Students'), (b'teachers', b'Teachers'), (b'businessmen', b'Business Men'), (b'retail', b'Bicycle Retail Agents'), (b'wholesale', b'Bicycle Wholesale Agents'), (b'farmers', b'Farmers'), (b'safari', b'Safari companies'), (b'hospitals', b'Hospitals'), (b'other', b'other')], max_length=255, null=True, verbose_name=b'Kundensegmente Top 3')),
                ('marketing_channels_mouth', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_radio', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_tv', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_socialmedia', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_poster', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_flyer', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_event_organisation', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_event_attendance', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_channels_other', models.CharField(blank=True, choices=[(b'not_using_it', b"We don't use it"), (b'rarely', b'rarely'), (b'occasionally', b'occasionally'), (b'often', b'often'), (b'very often', b'very often')], max_length=1, null=True)),
                ('marketing_sales_shop', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Shop')),
                ('marketing_sales_outlets', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Outlet')),
                ('marketing_sales_retail', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Retail')),
                ('marketing_sales_wholesale', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Wholesale')),
                ('marketing_sales_other', models.CharField(blank=True, choices=[(b'not_good', b'not good'), (b'ok', b'ok'), (b'successful', b'successful'), (b'not_using_it_yet', b'we do not use it (yet)')], max_length=1, null=True, verbose_name=b'Andere')),
                ('economic_bicycles_amount', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl verkaufte Fahrr\xc3\xa4der')),
                ('economic_bicycles_turnover', models.IntegerField(blank=True, null=True, verbose_name=b'Umsatz Fahrr\xc3\xa4der')),
                ('economic_spareparts_amount', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl verkaufte Ersatzteile')),
                ('economic_spareparts_turnover', models.IntegerField(blank=True, null=True, verbose_name=b'Umsatz Ersatzteile')),
                ('economic_services_amount', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl verkaufte Dienstleistungen')),
                ('economic_services_turnover', models.IntegerField(blank=True, null=True, verbose_name=b'Umsatz Dienstleistungen')),
                ('economic_turnover_total', models.IntegerField(blank=True, null=True, verbose_name=b'Total Umsatz')),
                ('economic_import_taxes', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Aktuelle Importz\xc3\xb6lle f\xc3\xbcr gebrauchte Fahrr\xc3\xa4der')),
                ('economic_transport_costs_port_to_organisation', models.IntegerField(blank=True, null=True, verbose_name=b'Aktuelle Kosten f\xc3\xbcr Transport von Eingangshafen zur Organisation')),
                ('economic_category1_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 1')),
                ('economic_category1_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 1')),
                ('economic_category2_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 2')),
                ('economic_category2_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 2')),
                ('economic_category3_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 3')),
                ('economic_category3_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 3')),
                ('economic_category4_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 4')),
                ('economic_category4_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 4')),
                ('economic_category5_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 5')),
                ('economic_category5_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 5')),
                ('economic_category6_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 6')),
                ('economic_category6_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 6')),
                ('economic_category7_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 7')),
                ('economic_category7_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 7')),
                ('economic_category8_name', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Kategorie 8')),
                ('economic_category8_pricerange', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Preisrange Kategorie 8')),
                ('economic_payment_types', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(b'cash', b'Cash Payment'), (b'installment', b'Installment'), (b'card', b'Payment with Credit/Debit Card'), (b'phone', b'Payment with Mobile Phone'), (b'microloan', b'Micro Loan (e.g. in cooperation with Micro Finance Institution)'), (b'other', b'Other')], max_length=20, null=True)),
                ('economic_notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen')),
                ('vocational_program_duration', models.CharField(blank=True, choices=[(b'less_than_3_months', b'less than 3 months'), (b'6_to_12_months', b'6 - 12 months'), (b'12_to_18_months', b'12 - 18 months'), (b'18_to_24_months', b'18 - 24 months'), (b'more_than_24_months', b'more than 24 months')], max_length=1, null=True, verbose_name=b'Dauer des Besch\xc3\xa4ftigungsprogramms')),
                ('vocational_program_girls', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl M\xc3\xa4dchen im Ausbildungsprogramm')),
                ('vocational_program_boys', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Jungen im Ausbildungsprogramm')),
                ('vocational_completed_girls', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl M\xc3\xa4dchen Ausbildungsprogramm abgeschlossen')),
                ('vocational_completed_boys', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Jungen Ausbildungsprogramm abgeschlossen')),
                ('vocational_certificates', models.IntegerField(blank=True, null=True, verbose_name=b'Ausgestellte Zertifikate dieses Jahr')),
                ('vocational_certificates_ack', models.IntegerField(blank=True, null=True, verbose_name=b'Davon staatlich anerkannte Zertifikate')),
                ('vocational_exstudents_employed', models.IntegerField(blank=True, null=True, verbose_name=b'Studenten vom letzten Jahr die jetzt angestellt sind')),
                ('vocational_exstudents_selfemployed_new', models.IntegerField(blank=True, null=True, verbose_name=b'Studenten vom letzten Jahr die jetzt bei einem anderen Betrieb angestellt sind')),
                ('vocational_exstudents_selfemployed_link', models.IntegerField(blank=True, null=True, verbose_name=b'Studenten vom letzten Jahr die jetzt bei einem Partnerbetrieb angestellt sind')),
                ('vocational_notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen')),
                ('vocational_exstudents_bicycle_industry', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Ex-Studenten die jetzt im Velogewerbe arbeiten')),
                ('vocational_exstudents_agriculture', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Ex-Studenten die jetzt in der Landwirtschaft arbeiten')),
                ('vocational_exstudents_familiybusiness', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Ex-Studenten die jetzt im Familienbetrieb arbeiten')),
                ('vocational_exstudents_energy', models.IntegerField(blank=True, null=True, verbose_name=b'Anzahl Ex-Studenten die jetzt im Energie Sektor arbeiten')),
                ('mobilityprogram', models.BooleanField(default=False)),
                ('mobilityprogram_people_benefitted', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Anzahl Personen die vom Mobilit\xc3\xa4tsprogramm profitiert haben')),
                ('mobilityprogram_financial_support', models.BooleanField(default=False, verbose_name=b'Mobilit\xc3\xa4tsprogramm finanziell von Velafrica unterst\xc3\xbctzt?')),
                ('mobilityprogram_notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen')),
                ('communityproject_reinvest_profit', models.BooleanField(default=False, verbose_name=b'Gewinn vom letzten Jahr in Community Projekte investiert?')),
                ('communityproject_areas', models.CharField(blank=True, choices=[(b'education', b'Schooling / Education'), (b'entrepreneurship', b'Entrepreneuership'), (b'environment', b'Evnironment / Environmental protection'), (b'mobility', b'Mobility'), (b'women_empowerment', b"Women's empowerment"), (b'children_empowerment', b"Children's empowerment"), (b'sports_activist', b'Sports activities'), (b'other', b'Other')], max_length=1, null=True, verbose_name=b'Feld der Community Arbeit')),
                ('communityproject_reinvest_profit_total', models.IntegerField(blank=True, null=True, verbose_name=b'In Community Projekt re-investierter Betrag')),
                ('communityproject_people_benefitted', models.CharField(blank=True, max_length=255, null=True, verbose_name=b'Anzahl Personen die vom Community Projekt profitiert haben')),
                ('communityproject_manager', models.BooleanField(default=False, verbose_name=b'Community Manager vorhanden?')),
                ('communityproject_notes', models.TextField(blank=True, null=True, verbose_name=b'Bemerkungen')),
                ('cooperation_quality_bicycles', models.CharField(blank=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10')], max_length=2, null=True, verbose_name=b'Qualit\xc3\xa4t der gelieferten Velos')),
                ('cooperation_quality_spares', models.CharField(blank=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10')], max_length=2, null=True, verbose_name=b'Qualit\xc3\xa4t der gelieferten Ersatzteile')),
                ('cooperation_quality_tools', models.CharField(blank=True, choices=[(b'1', b'1'), (b'2', b'2'), (b'3', b'3'), (b'4', b'4'), (b'5', b'5'), (b'6', b'6'), (b'7', b'7'), (b'8', b'8'), (b'9', b'9'), (b'10', b'10')], max_length=2, null=True, verbose_name=b'Qualit\xc3\xa4t der gelieferten Werkzeuge')),
                ('cooperation_ordering_experience', models.TextField(blank=True, help_text=b'Wie wird das Bestellen der Fahrr\xc3\xa4der und Ersatzteile empfunden?', null=True, verbose_name=b'Bestellerlebnis')),
                ('cooperation_comments', models.TextField(blank=True, null=True, verbose_name=b'Allgemeine Kommentare zur Partnerschaft')),
                ('final_biggest_success', models.TextField(blank=True, null=True, verbose_name=b'Gr\xc3\xb6sste Erfolge dieses Jahres?')),
                ('final_future_challenges', models.TextField(blank=True, null=True, verbose_name=b'Gr\xc3\xb6sste Herausforderungen der Zukunft?')),
                ('partner_sud', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='velafrica_sud.PartnerSud')),
            ],
            options={
                'ordering': ['-creation'],
            },
        ),
        migrations.CreateModel(
            name='ReportStaff',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('salary', models.IntegerField(verbose_name=b'Sal\xc3\xa4r (USD)')),
                ('number', models.IntegerField(verbose_name=b'Anzahl Angestellte')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='velafrica_sud.Report', verbose_name=b'Report')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name=b'Name')),
            ],
        ),
        migrations.AddField(
            model_name='reportstaff',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='velafrica_sud.Role', verbose_name=b'Rolle'),
        ),
        migrations.AddField(
            model_name='partnerstaff',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='velafrica_sud.PartnerSud', verbose_name=b'Arbeitgeber'),
        ),
        migrations.AddField(
            model_name='partnerstaff',
            name='role',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='velafrica_sud.Role', verbose_name=b'Rolle'),
        ),
        migrations.AddField(
            model_name='historicalreportstaff',
            name='report',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='velafrica_sud.Report'),
        ),
        migrations.AddField(
            model_name='historicalreportstaff',
            name='role',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='velafrica_sud.Role'),
        ),
        migrations.AddField(
            model_name='historicalreport',
            name='partner_sud',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='velafrica_sud.PartnerSud'),
        ),
        migrations.AddField(
            model_name='historicalpartnerstaff',
            name='partner',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='velafrica_sud.PartnerSud'),
        ),
        migrations.AddField(
            model_name='historicalpartnerstaff',
            name='role',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='velafrica_sud.Role'),
        ),
        migrations.AddField(
            model_name='historicalcontainer',
            name='partner_to',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='velafrica_sud.PartnerSud'),
        ),
        migrations.AddField(
            model_name='historicalcontainer',
            name='stocklist',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='stock.StockList'),
        ),
        migrations.AddField(
            model_name='historicalcontainer',
            name='warehouse_from',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='stock.Warehouse'),
        ),
        migrations.AddField(
            model_name='container',
            name='logistics',
            field=models.ForeignKey(blank=True, help_text=b'Logistikunternehmen', null=True, on_delete=django.db.models.deletion.CASCADE, to='velafrica_sud.Forwarder', verbose_name=b'Forwarder'),
        ),
        migrations.AddField(
            model_name='container',
            name='organisation_from',
            field=models.ForeignKey(blank=True, help_text=b'Ort wo der Container geladen wurde.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organisation.Organisation', verbose_name=b'Verarbeitungspartner'),
        ),
        migrations.AddField(
            model_name='container',
            name='partner_to',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='velafrica_sud.PartnerSud', verbose_name=b'Destination'),
        ),
        migrations.AddField(
            model_name='container',
            name='stocklist',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.StockList'),
        ),
        migrations.AddField(
            model_name='container',
            name='warehouse_from',
            field=models.ForeignKey(blank=True, help_text=b'Lager wo die Velos verladen wurden', null=True, on_delete=django.db.models.deletion.CASCADE, to='stock.Warehouse', verbose_name=b'Export Lager'),
        ),
    ]
